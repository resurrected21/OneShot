name: Build and Release OneShot

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    name: Build DEB Package
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup environment
        id: setup
        run: |
          VERSION=$(cat version)
          VERSION_CODE=$(git rev-list HEAD --count)
          SHORT_HASH=$(git rev-parse --short HEAD)
          echo "VERSION=$VERSION.$VERSION_CODE" >> $GITHUB_OUTPUT
          echo "SHORT_HASH=$SHORT_HASH" >> $GITHUB_OUTPUT

      - name: Build DEB package
        id: build
        run: |
          bash scripts/build.sh
        env:
          GITHUB_WORKSPACE: ${{ github.workspace }}

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: oneshot-deb
          path: |
            *.deb
            *.sha256
            *.md5

      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ${{ steps.build.outputs.deb_out }}
            ${{ steps.build.outputs.deb_out }}.sha256
            ${{ steps.build.outputs.deb_out }}.md5
          body: |
            # OneShot ${{ steps.setup.outputs.VERSION }}

            ## Installation
            ```bash
            wget https://github.com/resurrected21/OneShot/releases/download/${{ github.ref_name }}/${{ steps.build.outputs.deb_name }}
            apt install ./${{ steps.build.outputs.deb_name }}
            ```

            ## Usage
            ```bash
            sudo oneshot -i wlan0 -K
            ```

            ## What's New
            - Updated vulnerable devices database (340+ routers)
            - 2025 router models added (TP-Link, ASUS, D-Link, etc.)
            - Improved installation scripts
            - Better error handling
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Send Telegram notification
        if: success()
        run: |
          bash scripts/telegram_bot.sh "${{ steps.build.outputs.deb_out }}"
        env:
          BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          VERSION: ${{ steps.setup.outputs.VERSION }}
          COMMIT_MESSAGE: ${{ github.event.head_commit.message }}
          COMMIT_URL: ${{ github.event.head_commit.url }}
          RUN_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          DOWNLOAD_URL: https://github.com/resurrected21/OneShot/releases/latest
